//GMO-HS
#include <stdio.h>
#include <string.h>
#include "Stack.h"

bool balancedBrackets(char *exp);

int main(){

    bool res;
    char expresion[50];
    printf("Introduce la expresion: \n ");
    gets(expresion);
    res = balancedBrackets(expresion);
    if(res==true)
        printf("\nLa expresion esta correctamente balanceada. \n");
    else
        printf("\nLa expresion esta incorrectamente balanceada. \n");


	return 0;
}

bool balancedBrackets(char *exp)
{
    int i;
    int *t, *check;
    Stack temp;
    temp = createStack();
    for(i=0; i<strlen(exp); i++)
    {
        if((exp[i] == '[')||(exp[i] == '('))
            push(temp, (exp[i])); //Se genera un nodo en el stack por cada [ o (
        else if((exp[i] == ']'))
        {
            t = pop(temp);
            if(t == '(')
               return false; //Si se encuentra un ( para un ] se determina false
        }
        else if((exp[i]== ')'))
        {
            t = pop(temp);
            if(t == '[')
               return false; //Si se encuentra un [ para un ) se determina false
            
        }
    }
    if(top(temp)==NULL) //Si no quedan nodos en Stack se determina true
        return true;
    else
        return false; //Cualquier otro resultado es False

}

